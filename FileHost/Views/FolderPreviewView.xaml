<UserControl x:Class="FileHost.Views.FolderPreviewView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="80" d:DesignWidth="800"
             Background="White"
             Margin="0, 15"
             Height="80"
             HorizontalAlignment="Stretch">
    <UserControl.Resources>
        <ImageBrush x:Key="BackArrow" ImageSource="../Assets/deleteColored.png"></ImageBrush>
        <ImageBrush x:Key="OverBackArrow" ImageSource="../Assets/overDeleteColored.png"></ImageBrush>
        <ImageBrush x:Key="Download" ImageSource="../Assets/downloadColored.png"></ImageBrush>
        <ImageBrush x:Key="OverDownload" ImageSource="../Assets/overDownloadColored.png"></ImageBrush>
        <Style TargetType="Button" x:Key="DeleteButtonStyle">
            <Setter Property="Background" Value="{StaticResource BackArrow}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource OverBackArrow}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="DownloadButtonStyle">
            <Setter Property="Background" Value="{StaticResource Download}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource OverDownload}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseDoubleClick">
            <i:InvokeCommandAction Command="{Binding Path=DataContext.SyncCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" 
                                   CommandParameter="{Binding Path=.Item}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Border BorderThickness="2">
        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=MainGrid}" Value="True">
                        <Setter Property="BorderBrush" Value="#355fdd"></Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsChecked, ElementName=IsSelectedCheckBox}" Value="True">
                        <Setter Property="BorderBrush" Value="#355fdd"></Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid x:Name="MainGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown">
                    <i:InvokeCommandAction Command="{Binding ToggleSelectCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Grid Background="#355fdd">
                <CheckBox x:Name="IsSelectedCheckBox"
                          IsChecked="{Binding IsSelected}"
                          VerticalAlignment="Center"
                          Margin="10, 0" />
            </Grid>
            <Grid Background="RoyalBlue"
                  Grid.Column="1"
                  Width="70">
                <Image Source="../Assets/folder.png"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Width="48"
                           Margin="10"></Image>
            </Grid>
            <StackPanel VerticalAlignment="Center"
                        Grid.Column="2">
                <TextBlock FontSize="16" 
                           Margin="20, 5, 20, 0"
                           TextTrimming="CharacterEllipsis" 
                           Text="{Binding Item.Name}"/>
                <TextBlock FontSize="14"
                           Margin="20, 5" 
                           Text="{Binding DisplayItemsAmount}"/>
            </StackPanel>
            <Button Grid.Column="3"
                    Margin="10, 0"
                    Width="36"
                    Height="36"
                    Style="{StaticResource DownloadButtonStyle}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.DownloadItemCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" 
                                               CommandParameter="{Binding}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Grid.Column="4"
                    Margin="10, 0"
                    Width="36"
                    Height="36"
                    Style="{StaticResource DeleteButtonStyle}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.DeleteItemCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" 
                                               CommandParameter="{Binding}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>
    </Border>
</UserControl>
